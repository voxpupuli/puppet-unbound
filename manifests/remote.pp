# @summary Configure remote control of the unbound daemon process
# @param enable
#   The option is used to enable remote control, default is false.
#   If turned off, the server does not listen for  control.
# @param interface
#   Give  IPv4  or IPv6 addresses to listen on for control commands.
#   By default localhost (127.0.0.1 and ::1) is listened.
# @param port
#   The port number to listen on for control commands, default is
#   8953.  If you change this port number,  and  permissions have been dropped,
#   a reload is not sufficient to open the port again, you must then restart.
# @param server_key_file
#   Path to the server private key, by default unbound_server.key.
#   This file is generated by the unbound-control-setup utility.  This file is
#   used by the unbound server, but not by unbound-control.
# @param control_use_cert if we should use certs for the control channel
# @param server_cert_file
#   Path to the server self signed certificate, by default
#   unbound_server.pem.  This file is generated by the unbound-control-setup
#   utility.  This file is used by the unbound server, and also by
#   unbound-control.
# @param control_key_file
#   Path to the control client private key, by default
#   unbound_control.key.  This file is generated by the unbound-control-setup
#   utility.  This file is used by unbound-control.
# @param control_cert_file
#   Path to the control client certificate, by default
#   unbound_control.pem.  This certificate has to be  signed  with  the server
#   certificate. This file is generated by the unbound-control-setup utility.
#   This file is used by unbound-control.
# @param group
#   Name of the group for unbound files and directory
# @param confdir
#   Name of the directory where configuration files are stored
# @param config_file
#   Name of the unbound config file
# @param control_setup_path the path to nsd-control-setup
#
class unbound::remote (
  Boolean $enable                     = $unbound::control_enable,
  Array $interface                    = ['::1', '127.0.0.1'],
  Integer $port                       = 8953,
  Boolean $control_use_cert           = true,
  String $server_key_file             = "${unbound::confdir}/unbound_server.key",
  String $server_cert_file            = "${unbound::confdir}/unbound_server.pem",
  String $control_key_file            = "${$unbound::confdir}/unbound_control.key",
  String $control_cert_file           = "${$unbound::confdir}/unbound_control.pem",
  $group                              = $unbound::group,
  $confdir                            = $unbound::confdir,
  $config_file                        = $unbound::config_file,
  $control_setup_path                 = $unbound::control_setup_path,
) {
  $_tls_config = @("CONFIG")
      ${unbound::print_config('server-key-file', $server_key_file)}
      ${unbound::print_config('server-cert-file', $server_cert_file)}
      ${unbound::print_config('control-key-file', $control_key_file)}
      ${unbound::print_config('control-cert-file', $control_cert_file)}
    | CONFIG
  $tls_config = $control_use_cert.bool2str($_tls_config, '')
  $content = @("CONFIG")
    remote-control:
      ${unbound::print_config('control-enable', $enable)}
      ${unbound::print_config('control-interface', $interface)}
      ${unbound::print_config('control-port', $port)}
    ${tls_config}
    | CONFIG
  concat::fragment { 'unbound-remote':
    order   => '10',
    target  => $config_file,
    content => $content.extlib::remove_blank_lines(),
  }

  unless $control_setup_path.empty {
    exec { 'unbound-control-setup':
      command => "${control_setup_path} -d ${confdir}",
      creates => $server_key_file,
    }

    file { [$server_key_file, $server_cert_file, $control_key_file, $control_cert_file]:
      owner   => 'root',
      group   => $group,
      mode    => '0640',
      require => Exec['unbound-control-setup'],
    }
  }
}
